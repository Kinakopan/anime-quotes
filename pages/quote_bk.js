import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import record from '../data/animequotes.json'
import { useState, useEffect } from 'react'

export default function Home() {
  console.log('inside Home: ', record);

  const [capResult, setCapResult] = useState('');
  const [inputValue, setInputValue] = useState('Default');
  const [searchResult, setSearchResult] = useState('Enter Anime Name');

  const showAll = async () => {
    setCapResult('ALL')
    console.log('Button Clicked')
    console.log('setCapResult is: ', capResult)
  }

  const handleBlur = (e) => {
    setInputValue(e.target.value);
    console.log('e.target.value is: ', e.target.value)
    console.log('inputValue is: ', inputValue)
  }

  useEffect(() => {
    console.log('capResult value is: ', capResult,'and ', 'useEffect value is: ', inputValue);
  }, [capResult, inputValue]);

  const handleSubmit = async (e) => {
    e.preventDefault()
    console.log('===submit===');
    const ResultString = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);
    setCapResult(ResultString)
    console.log('setCapResult is: ', capResult);
    setSearchResult(inputValue.toLowerCase())
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.main_wrapper}>

          {/* <input onClick={() => addingData()}>Click Me</input> */}
          <button
            className={styles.submitBtn}
            onClick={() => showAll()}>
              SHOW ALL
          </button>

          <form
            className={styles.channel_form}
            onSubmit={handleSubmit}
            >
            <input
              className={styles.AnimenameInput}
              type="text"
              onBlur={handleBlur}
              // onChange={(e) => passingValue(e.target.value)}
              />
              <button
                className={styles.submitBtn}
                type="submit">SEARCH
              </button>
          </form>

          {/* <h1>ALL QUOTES</h1>
          {
            record.map( (rec, index) => {
              return (
                <div className={styles.return_wrapper}>
                  <ul
                    key={index}
                    className={styles.list}>
                    <li>
                      <span className={styles.list_anime}>
                        Anime: {rec.Anime}
                      </span>
                    </li>
                    <li>
                      <span className={styles.list_character}>
                        Character: {rec.Character}
                      </span>
                    </li>
                    <li>
                      <span className={styles.list_quote}>
                        "{rec.Quote}"
                      </span>
                    </li>
                  </ul>
                </div> //.return_wrapper
              )
            })
          } */}

          <h1>{capResult}</h1>
          {
            record.map( (rec, index) => {
              return (
                <div className={styles.return_wrapper}>
                  {
                    capResult == 'ALL'
                    ?
                      <ul
                        key={index}
                        className={styles.list}>
                        <li>
                          <span className={styles.list_anime}>
                            Anime: {rec.Anime}
                          </span>
                        </li>
                        <li>
                          <span className={styles.list_character}>
                            Character: {rec.Character}
                          </span>
                        </li>
                        <li>
                          <span className={styles.list_quote}>
                            "{rec.Quote}"
                          </span>
                        </li>
                      </ul>
                      :
                        rec.Anime.toLowerCase() == searchResult
                        ?
                          <ul
                            key={index}
                            className={styles.list}>
                            <li>
                              <span className={styles.list_character}>
                                Character: {rec.Character}
                              </span>
                            </li>
                            <li>
                              <span className={styles.list_quote}>
                                "{rec.Quote}"
                              </span>
                            </li>
                          </ul>
                          :
                            <></>
                    }
                </div>
              )
            })
          }

        </div> {/* .wrapper */}
      </main>
    </>
  )
}
